{"version":3,"sources":["Movie.js","App.js","index.js"],"names":["Movie","year","title","summary","poster","genres","className","src","alt","map","genre","index","key","slice","App","state","isLoading","movies","getMovies","a","async","axios","get","data","setState","this","movie","id","medium_cover_image","React","Component","ReactDOM","render","document","getElementById"],"mappings":"gTA+BeA,MA3Bf,YAA0D,IAAzCC,EAAwC,EAAxCA,KAAMC,EAAkC,EAAlCA,MAAOC,EAA2B,EAA3BA,QAASC,EAAkB,EAAlBA,OAAQC,EAAU,EAAVA,OAC3C,OACI,yBAAKC,UAAU,SACX,yBAAKC,IAAKH,EAAQI,IAAKN,EAAOA,MAAOA,IACrC,yBAAKI,UAAU,cACX,wBAAIA,UAAU,eAAeJ,GAC7B,wBAAII,UAAU,eAAeL,GAC7B,wBAAIK,UAAU,gBACTD,EAAOI,KAAI,SAACC,EAAOC,GAAR,OACR,wBAAIL,UAAU,eAAeM,IAAKD,GAC7BD,OAEb,uBAAGJ,UAAU,iBAAiBH,EAAQU,MAAM,EAAE,KAA9C,UCgCDC,G,iNA1CbC,MAAQ,CACNC,WAAW,EACXC,OAAQ,I,EAEVC,UAAY,4BAAAC,EAAAC,OAAA,kEAAAD,EAAA,MAKAE,IAAMC,IAAI,6DALV,gBAGEL,EAHF,EAERM,KACEA,KAAQN,OAKZ,EAAKO,SAAS,CACZP,SAAQD,WAAW,IATX,sC,mFAcVS,KAAKP,c,+BAGG,IAAD,EACuBO,KAAKV,MAA3BC,EADD,EACCA,UAAWC,EADZ,EACYA,OACnB,OACE,4BAAQX,UAAU,aACfU,EACC,yBAAKV,UAAU,UACb,0BAAMA,UAAU,eAAhB,eAEC,yBAAKA,UAAU,UACjBW,EAAOR,KAAI,SAAAiB,GAAK,OACf,kBAAC,EAAD,CAAOC,GAAID,EAAMC,GAAI1B,KAAMyB,EAAMzB,KAAMC,MAAOwB,EAAMxB,MAClDC,QAASuB,EAAMvB,QAASC,OAAQsB,EAAME,mBACtCvB,OAAQqB,EAAMrB,OAAQO,IAAKc,EAAMC,c,GAlC7BE,IAAMC,YCDxBC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.a8aa2505.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport \"./Movie.css\";\r\n\r\nfunction Movie({ year, title, summary, poster, genres }) {\r\n    return (\r\n        <div className=\"movie\">\r\n            <img src={poster} alt={title} title={title} />\r\n            <div className=\"movie_data\">\r\n                <h3 className=\"movie_title\">{title}</h3>\r\n                <h5 className=\"m ovie_year\">{year}</h5>\r\n                <ul className=\"movie_genres\">\r\n                    {genres.map((genre, index) => (\r\n                        <li className=\"genres_genre\" key={index}>\r\n                            {genre}</li>\r\n                    ))}</ul>\r\n                <p className=\"movie_summary\">{summary.slice(0,180)}...</p>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nMovie.propTypes = {\r\n    id: PropTypes.number.isRequired,\r\n    year: PropTypes.number.isRequired,\r\n    title: PropTypes.string.isRequired,\r\n    summary: PropTypes.string.isRequired,\r\n    poster: PropTypes.string.isRequired,\r\n    genres: PropTypes.arrayOf(PropTypes.string).isRequired\r\n}\r\n\r\nexport default Movie;","import React from 'react';\nimport axios from \"axios\";\nimport Movie from './Movie';\nimport \"./App.css\";\n\nclass App extends React.Component {\n  state = {\n    isLoading: true,\n    movies: []\n  };\n  getMovies = async () => {\n    const {\n      data: {\n        data: { movies }\n      }\n    } = await axios.get(\"https://yts-proxy.now.sh/list_movies.json?sort_by=rating\");\n    //console.log(movies.data.data.movies);\n    //console.log(movies);\n    this.setState({\n      movies, isLoading: false\n    });\n  };\n\n  componentDidMount() {\n    this.getMovies();\n  }\n\n  render() {\n    const { isLoading, movies } = this.state;\n    return (\n      <secion className=\"container\">\n        {isLoading ? (\n          <div className=\"loader\">\n            <span className=\"loader_text\">Loading...</span>\n          </div>\n        ) : (<div className=\"movies\">\n          {movies.map(movie => (\n            <Movie id={movie.id} year={movie.year} title={movie.title}\n              summary={movie.summary} poster={movie.medium_cover_image}\n              genres={movie.genres} key={movie.id} />\n          ))}\n        </div>\n          )}\n      </secion>\n    );\n  }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();"],"sourceRoot":""}